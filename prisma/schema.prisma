generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                   String                @id @default(uuid())
  profile              Profile?
  paymentDetail        PaymentDetail?
  notificationSetting  NotificationSetting?
  userSubscriptionPlan UserSubscriptionPlan?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
}

model Profile {
  id           String      @id @default(uuid())
  email        String      @unique
  username     String      @unique
  name         String?
  jobTitle     String?
  company      String?
  bio          String?
  phoneNumber  String?
  user         User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String?     @unique
  country      Country?    @relation(fields: [countryId], references: [id])
  countryId    String?
  vernacular   Vernacular? @relation(fields: [vernacularId], references: [id])
  vernacularId String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model PaymentDetail {
  id             String    @id @default(uuid())
  cardHolderName String?
  cardNumber     String?
  cardExpiryDate DateTime?
  cardCvv        String?
  country        Country?  @relation(fields: [countryId], references: [id])
  countryId      String?
  user           User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String?   @unique
}

model PlanType {
  id                    String                 @id @default(uuid())
  title                 String
  description           String
  rate                  Float?
  compoundingPeriod     String?
  userSubscriptionPlans UserSubscriptionPlan[]
}

model UserSubscriptionPlan {
  id         String   @id @default(uuid())
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  planTypeId String
  planType   PlanType @relation(fields: [planTypeId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model NotificationSetting {
  id                 String   @id @default(uuid())
  communicationAlert Boolean  @default(false)
  securityAlert      Boolean  @default(false)
  meetupAlert        Boolean  @default(false)
  itemCommentAlert   Boolean  @default(false)
  mentionAlert       Boolean  @default(false)
  followAlert        Boolean  @default(false)
  repliesAlert       Boolean  @default(false)
  user               User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String?  @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Country {
  id             String          @id @default(uuid())
  title          String          @unique
  code           String
  paymentDetails PaymentDetail[]
  profiles       Profile[]
}

model Vernacular {
  id       String    @id @default(uuid())
  title    String    @unique
  profiles Profile[]
}
