### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Country {
  code: String!
  id: String!
  paymentDetails: [PaymentDetail]
  profiles: [Profile]
  title: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  signupUser(email: String!, username: String!): User
  updateNotificationSetting(communicationAlert: Boolean!, followAlert: Boolean!, itemCommentAlert: Boolean!, meetupAlert: Boolean!, mentionAlert: Boolean!, notificationSettingId: String!, repliesAlert: Boolean!, securityAlert: Boolean!): NotificationSetting
  updatePaymentDetail(cardExpiryDate: String!, cardHolderName: String!, cardNumber: String!, countryId: String!, paymentDetaild: String!): PaymentDetail
  updateProfile(bio: String!, company: String!, countryId: String!, email: String!, jobTitle: String!, name: String!, phoneNumber: String!, profileId: String!, username: String!, vernacularId: String!): Profile
  updateUserSubscriptionPlan(planTypeId: String!, userSubscriptionPlanId: String!): UserSubscriptionPlan
}

type NotificationSetting {
  communicationAlert: Boolean!
  createdAt: DateTime
  followAlert: Boolean!
  id: String!
  itemCommentAlert: Boolean!
  meetupAlert: Boolean!
  mentionAlert: Boolean!
  repliesAlert: Boolean!
  securityAlert: Boolean!
  updatedAt: DateTime
  user: User
}

type PaymentDetail {
  cardCvv: DateTime
  cardExpiryDate: DateTime
  cardHolderName: String
  cardNumber: DateTime
  country: Country
  id: String!
  user: User
}

type PlanType {
  compoundingPeriod: String
  description: String!
  id: String!
  rate: Float
  title: String!
  userSubscriptionPlans: [UserSubscriptionPlan]
}

type Profile {
  bio: String
  company: String
  country: Country
  createdAt: DateTime
  email: String!
  id: String!
  jobTitle: String
  name: String
  phoneNumber: String
  updatedAt: DateTime
  user: User
  username: String
  vernacular: Vernacular
}

type Query {
  allCountry: [Country]
  allPlanType: [PlanType]
  allUser: [User]
  allVernacular: [Vernacular]
  notificationSettingById(notificationSettingId: String!): NotificationSetting
  profileById(profileId: String!): Profile
  profileByUsername(username: String!): Profile
  showFirstUser: User
  userById(userId: String!): User
}

type User {
  createdAt: DateTime
  id: String!
  notificationSetting: NotificationSetting
  paymentDetail: PaymentDetail
  profile: Profile
  updatedAt: DateTime
  userSubscriptionPlan: UserSubscriptionPlan
}

type UserSubscriptionPlan {
  createdAt: DateTime
  id: String!
  planType: PlanType!
  updatedAt: DateTime
  user: User!
}

type Vernacular {
  id: String!
  profiles: [Profile]
  title: String!
}
